{"version":3,"sources":["components/section/section.module.css","components/filter/filter.module.css","components/section/section.js","redux/contacts/contacts-actions.js","components/form/form.js","components/contacts/contacts.js","components/filter/filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/form/form.module.css","components/contacts/contacts.module.css"],"names":["module","exports","Section","title","children","className","s","section","head","contactsAction","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","doFilter","Form","contacts","useSelector","state","dispatch","useDispatch","form","onSubmit","e","preventDefault","currentTarget","items","find","el","toLowerCase","value","alert","labelForm","inputForm","type","pattern","required","buttonForm","Contacts","trimFilter","filter","trim","map","contactItem","delete","onClick","target","normalizedFilter","contact","includes","getVisibleContacts","propTypec","PropTypes","array","onDeleteContact","func","Filter","headFilter","inputFilter","onChange","App","createReducer","actions","_","combineReducers","ContactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.cc54681e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"section_head__t8q79\",\"section\":\"section_section__1X7Wx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headFilter\":\"filter_headFilter__3ZFin\",\"inputFilter\":\"filter_inputFilter__2Khh-\"};","import PropTypes from 'prop-types';\nimport s from './section.module.css';\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.head}>{title}</h2>\n      {children}\n    </section>\n  );\n}\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: { id: uuidv4(), name, number },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\nconst doFilter = createAction('contacts/filter');\r\nconst contactsAction = {\r\n  addContact,\r\n  deleteContact,\r\n  doFilter,\r\n};\r\nexport default contactsAction;\r\n","import { useSelector, useDispatch } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\nimport s from './form.module.css';\n\nexport default function Form() {\n  const { contacts } = useSelector(state => state);\n  const dispatch = useDispatch();\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const { name, number } = e.currentTarget;\n    const newContact = contacts.items.find(\n      el => el.name.toLowerCase() === name.value.toLowerCase(),\n    );\n\n    newContact\n      ? alert(`${name.value} is already in your contacts!`)\n      : dispatch(contactsAction.addContact(name.value, number.value));\n\n    name.value = '';\n    number.value = '';\n  };\n\n  return (\n    <form className={s.form} onSubmit={e => onSubmit(e)}>\n      <label className={s.labelForm}>\n        Name\n        <input\n          className={s.inputForm}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.labelForm}>\n        Number\n        <input\n          className={s.inputForm}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <button className={s.buttonForm} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\nimport s from './contacts.module.css';\nexport default function Contacts() {\n  const { contacts } = useSelector(state => state);\n  const dispatch = useDispatch();\n  const trimFilter = contacts.filter.trim() === '';\n  const filter = contacts.filter;\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.items.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <ul>\n      {trimFilter\n        ? contacts.items.map(({ id, name, number }) => {\n            return (\n              <li key={id} id={id} className={s.contactItem}>\n                {name}: {number}\n                <button\n                  className={s.delete}\n                  type=\"button\"\n                  id={id}\n                  onClick={e => {\n                    dispatch(contactsAction.deleteContact(e.target.id));\n                  }}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })\n        : getVisibleContacts().map(({ id, name, number }) => {\n            return (\n              <li key={id} id={id} className={s.contactItem}>\n                {name}: {number}\n                <button\n                  className={s.delete}\n                  type=\"button\"\n                  id={id}\n                  onClick={e => {\n                    dispatch(contactsAction.deleteContact(e.target.id));\n                  }}\n                >\n                  Delete\n                </button>\n              </li>\n            );\n          })}\n    </ul>\n  );\n}\nContacts.propTypec = {\n  contacts: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n","import { useDispatch } from 'react-redux';\nimport contactsAction from '../../redux/contacts/contacts-actions';\nimport PropTypes from 'prop-types';\nimport s from './filter.module.css';\nexport default function Filter() {\n  const dispatch = useDispatch();\n  return (\n    <label>\n      <h3 className={s.headFilter}>Find contacts by name</h3>\n      <input\n        className={s.inputFilter}\n        type=\"text\"\n        onChange={e => dispatch(contactsAction.doFilter(e.target.value))}\n      />\n    </label>\n  );\n}\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import Section from './components/section/section';\nimport Form from './components/form/form';\nimport Contacts from './components/contacts/contacts';\nimport Filter from './components/filter/filter';\n\nexport default function App() {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <Contacts />\n      </Section>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.doFilter]: (_, { payload }) => payload,\r\n});\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport combineReducers from './contacts/contacts-reducer';\r\n\r\nconst ContactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(ContactsPersistConfig, combineReducers),\r\n  },\r\n  middleware: getDefaultMiddleware =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"form_form__awxH0\",\"labelForm\":\"form_labelForm__3a028\",\"inputForm\":\"form_inputForm__3V2SF\",\"buttonForm\":\"form_buttonForm__1BkqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"contacts_contactItem__Ga5oJ\",\"delete\":\"contacts_delete__2MSLq\"};"],"sourceRoot":""}